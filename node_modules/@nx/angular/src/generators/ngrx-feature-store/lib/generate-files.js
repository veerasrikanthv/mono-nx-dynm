"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.generateFilesFromTemplates = void 0;
const devkit_1 = require("@nx/devkit");
const semver_1 = require("semver");
const version_utils_1 = require("../../utils/version-utils");
function generateFilesFromTemplates(tree, options) {
    const projectNames = (0, devkit_1.names)(options.name);
    const fileName = options.subdirectory
        ? (0, devkit_1.joinPathFragments)(options.subdirectory, projectNames.fileName)
        : projectNames.fileName;
    (0, devkit_1.generateFiles)(tree, (0, devkit_1.joinPathFragments)(__dirname, '..', 'files', 'base'), options.parentDirectory, {
        ...options,
        ...projectNames,
        fileName,
        relativeFileName: projectNames.fileName,
        importFromOperators: (0, semver_1.lt)(options.rxjsVersion, '7.2.0'),
        tmpl: '',
    });
    const angularVersion = (0, version_utils_1.getInstalledAngularVersion)(tree);
    if ((0, semver_1.lt)(angularVersion, '14.1.0')) {
        (0, devkit_1.generateFiles)(tree, (0, devkit_1.joinPathFragments)(__dirname, '..', 'files', 'no-inject'), options.parentDirectory, {
            ...options,
            ...projectNames,
            fileName,
            relativeFileName: projectNames.fileName,
            tmpl: '',
        });
    }
    if (!options.facade) {
        tree.delete((0, devkit_1.joinPathFragments)(options.parentDirectory, options.directory, `${options.subdirectory ? `${options.subdirectory}/` : ''}${projectNames.fileName}.facade.ts`));
        tree.delete((0, devkit_1.joinPathFragments)(options.parentDirectory, options.directory, `${options.subdirectory ? `${options.subdirectory}/` : ''}${projectNames.fileName}.facade.spec.ts`));
    }
}
exports.generateFilesFromTemplates = generateFilesFromTemplates;
