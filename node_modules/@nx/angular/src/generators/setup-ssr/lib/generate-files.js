"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.generateSSRFiles = void 0;
const devkit_1 = require("@nx/devkit");
const semver_1 = require("semver");
const version_utils_1 = require("../../utils/version-utils");
const path_1 = require("path");
function generateSSRFiles(tree, schema) {
    const projectConfig = (0, devkit_1.readProjectConfiguration)(tree, schema.project);
    const projectRoot = projectConfig.root;
    const browserBundleOutputPath = projectConfig.targets.build.options.outputPath;
    const pathToFiles = (0, devkit_1.joinPathFragments)(__dirname, '..', 'files');
    (0, devkit_1.generateFiles)(tree, (0, path_1.join)(pathToFiles, 'base'), projectRoot, {
        ...schema,
        tpl: '',
    });
    if (schema.standalone) {
        (0, devkit_1.generateFiles)(tree, (0, devkit_1.joinPathFragments)(pathToFiles, 'standalone'), projectRoot, { ...schema, browserBundleOutputPath, tpl: '' });
    }
    else {
        (0, devkit_1.generateFiles)(tree, (0, devkit_1.joinPathFragments)(pathToFiles, 'ngmodule', 'base'), projectRoot, { ...schema, browserBundleOutputPath, tpl: '' });
        const { major: angularMajorVersion, version: angularVersion } = (0, version_utils_1.getInstalledAngularVersionInfo)(tree);
        if (angularMajorVersion < 15) {
            (0, devkit_1.generateFiles)(tree, (0, devkit_1.joinPathFragments)(pathToFiles, 'ngmodule', 'v14'), projectRoot, { ...schema, browserBundleOutputPath, tpl: '' });
        }
        if ((0, semver_1.lt)(angularVersion, '15.2.0')) {
            (0, devkit_1.generateFiles)(tree, (0, devkit_1.joinPathFragments)(pathToFiles, 'ngmodule', 'pre-v15-2'), projectRoot, { ...schema, browserBundleOutputPath, tpl: '' });
        }
    }
}
exports.generateSSRFiles = generateSSRFiles;
