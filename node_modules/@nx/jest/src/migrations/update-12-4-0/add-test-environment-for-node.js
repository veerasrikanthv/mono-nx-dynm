"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const devkit_1 = require("@nx/devkit");
const executor_options_utils_1 = require("@nx/devkit/src/generators/executor-options-utils");
const path_1 = require("path");
const update_config_1 = require("../../utils/config/update-config");
function updateJestConfig(tree) {
    (0, executor_options_utils_1.forEachExecutorOptions)(tree, '@nrwl/jest:jest', (options, project) => {
        if (!options.jestConfig) {
            return;
        }
        const jestConfigPath = options.jestConfig;
        const jestConfig = require((0, path_1.join)(tree.root, jestConfigPath));
        const projectConfig = (0, devkit_1.readProjectConfiguration)(tree, project);
        const testEnvironment = jestConfig.testEnvironment;
        if (testEnvironment || !checkIfNodeProject(projectConfig)) {
            return;
        }
        try {
            (0, update_config_1.addPropertyToJestConfig)(tree, jestConfigPath, 'testEnvironment', 'node');
        }
        catch {
            devkit_1.logger.error((0, devkit_1.stripIndents) `Unable to update jest.config.js for project ${project}.`);
        }
    });
}
async function update(tree) {
    updateJestConfig(tree);
    await (0, devkit_1.formatFiles)(tree);
}
exports.default = update;
function checkIfNodeProject(config) {
    return Object.entries(config.targets).some(([targetName, targetConfig]) => targetConfig.executor?.includes?.('node'));
}
