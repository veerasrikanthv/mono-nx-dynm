"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const devkit_1 = require("@nx/devkit");
const tsquery_1 = require("@phenomnomnominal/tsquery");
function updateFile(fileAst, fileContents) {
    const importStatement = (0, tsquery_1.tsquery)(fileAst, 'ImportDeclaration StringLiteral[value=@typescript-eslint/experimental-utils]');
    if (importStatement.length === 0) {
        return;
    }
    const contentSlices = fileContents.split('@typescript-eslint/experimental-utils');
    let updatedFileContents = '';
    for (let i = 0; i < contentSlices.length / 2; i++) {
        updatedFileContents += `${contentSlices[i]}@typescript-eslint/utils`;
    }
    updatedFileContents += contentSlices[contentSlices.length - 1];
    return updatedFileContents;
}
async function experimentalToUtilsUpdate(tree) {
    try {
        (0, devkit_1.visitNotIgnoredFiles)(tree, 'tools/eslint-rules', (path) => {
            if (path.endsWith('.ts')) {
                const fileContents = tree.read(path).toString('utf-8');
                const fileAst = tsquery_1.tsquery.ast(fileContents);
                const updatedContents = updateFile(fileAst, fileContents);
                if (updatedContents) {
                    tree.write(path, updatedContents);
                }
            }
        });
        await (0, devkit_1.formatFiles)(tree);
    }
    catch { }
}
exports.default = experimentalToUtilsUpdate;
