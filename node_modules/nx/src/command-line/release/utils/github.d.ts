import { GitCommit } from './git';
export interface GithubRequestConfig {
    repo: string;
    token: string | null;
}
export interface GithubRelease {
    id?: string;
    tag_name: string;
    name?: string;
    body?: string;
    draft?: boolean;
    prerelease?: boolean;
}
export declare function getGitHubRemote(remoteName?: string): string;
export declare function createOrUpdateGithubRelease(githubRequestConfig: GithubRequestConfig, release: {
    version: string;
    body: string;
}, existingGithubReleaseForVersion?: GithubRelease): Promise<void>;
export declare function generateMarkdown(commits: GitCommit[], releaseVersion: string, githubRequestConfig: GithubRequestConfig): Promise<string>;
export declare function resolveGithubToken(): Promise<string | null>;
export declare function getGithubReleaseByTag(config: GithubRequestConfig, tag: string): Promise<GithubRelease>;
export declare function formatCommit(commit: GitCommit, githubRequestConfig: GithubRequestConfig): string;
